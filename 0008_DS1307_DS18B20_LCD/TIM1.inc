;************************************
;**
;**
;**
;************************************

TIM1_CAPT:

	reti

TIM1_COMPA:

	reti

TIM1_COMPB:

	reti

TIM1_OVF:
	push zl
	push zh
	push R16
	push R17
	in r16,SREG
	push r16
		
; переинициализация таймера  на минимальное время срабатывания
;		ldi 	r16,low(-25000)
;		sts 	TCNT1L,r16
;		ldi 	r16,high(-25000)
;		sts 	TCNT1H,r16		

; настроим ножку импульсов на вывод
		sbi DDRD,CLOCK
; загрузим константу требуемых шагов	
		lds zl,cntDriver
		lds zh,cntDriver+1

; проверим разгон или торможение
; пока количество импульсов больше РЕАЛЬНОЙ скорости разгон
; иначе можем начать торможение
		lds r16,ActSpeed
		lds r17,ActSpeed+1
		; умножим на 8,т.к. изминение на каждое восьмое срабатывание
		; приоритет по торможению меньше(тормозим режче)
		rol r16
		rol r17
		rol r16
		rol r17
		rol r16
		rol r17
		
		cp zl,r16
		cpc zh,r17
		brsh TestEN
; сбрасываем скорость для торможения, скоро закончаться наши шаги!!!
		ldi r16,low(1)
		sts Speed,r16
		ldi r16,high(1)
		sts Speed+1,r16		

TestEN:
; переинициализируем скорость, по каким либо причинам число шагов еще велико или снова велико
	lds r16,SetSpeed
	sts Speed,r16
	lds r17,SetSpeed+1
	sts Speed+1,r17

; сделаем проверку на работу с двигателем или пропуск
		sbis PORTD,Enable
		rjmp extTIM1;DoNWork
; смотрим сделали мы импульс?
; если это еще импульс прыгаем на метку завершения обработки
		sbic PORTD,CLOCK
		sbiw Z,1

		mov r17,zh
		or r17,zl
		breq extCLOCK0
		rjmp extCLOCK
extCLOCK:
; инвертируем выход
		in r16,PORTD
		ldi r17,1<<CLOCK
		eor r16,r17
		out PORTD,r16

; расчитаем требуемую скорость
		rcall SUB_Speed
		
; переинициализация таймера
		lds r16,ActTCNT2
		sts TCNT1L,r16		
		lds r16,ActTCNT2+1
		sts TCNT1H,r16

		rjmp extTIM1			
extCLOCK0:
		ldi r16,low(1)
		sts ActSpeed,r16
		ldi r16,high(1)
		sts ActSpeed+1,r16		

		sbi PORTD,CLOCK
		ldi ZL,1
		clr ZH
		rjmp extTIM1			
extTIM1:
; завершение обработки
; сохраняем текущие значения счетчика импульсов
		sts cntDriver,ZL
		sts cntDriver+1,ZH		

	pop r16
	out SREG,r16
	pop R17
	pop R16
	pop zh
	pop zl
	
		reti
;*******************************
;*******************************
SUB_Speed:
	push r16
	in r16,SREG
	push r16
	push r17
	push r18
	push r19

	; обновление срабатывания таймера на каждое е срабатывание!!!
		inc r8
		sbrs r8,1
		rjmp TimerCNT
		clr r8
; загрузим необходимую скорость	
		lds r16,Speed
		lds r17,Speed+1
; загрузим текущую уставку скорости
		lds r18,ActSpeed
		lds r19,ActSpeed+1
; при равенстве просто переводим в константу для таймера	
		cp r16,r18
		cpc r17,r19
		breq TimerCNT;== равенство
		brlo StopSpeed;< меньше

StartSpeed:
; увеличиваем требуемые обороты в минуту
; осуществляем разгон
		ldi r16,1
		clr r17
		add r18,r16
		adc r19,r17
		sts ActSpeed,r18
		sts ActSpeed+1,r19
	rjmp TimerCNT

StopSpeed:
; уменьшаем требуемые обороты в минуту
; осуществляем торможение
		ldi r16,1
		clr r17
		sub r18,r16
		sbc r19,r17
		sts ActSpeed,r18
		sts ActSpeed+1,r19
	rjmp TimerCNT

TimerCNT:
	lds r18,ActSpeed
	lds r19,ActSpeed+1

; константа 1го оборота в минуту на 20 МГц/8 и 200 шагов на оборот и двумя тактами на каждый импульс
; 1 оборот в минуту
; 1/60 оборот в секунду
; 1 оборот это 200 импульсов
; 1 импульс 2 прерывания от таймера(меандр)
; получаеться частота срабатывания таймера 400/60=6 Гц
; а это каждые 150000 микросекунд
; наш кварц 20МГц и предделитель выбран на 64
; то есть каждый такт таймера равняеться 3,2 микросекунды
; для 150 000 мксек понадобиться 46875 тиков таймера
; таймер выбран двухбайтовый то есть максимальное значение 65535 тиков можем зафиксировать
;
; берем отсчет на минимальную скорость - 1 оборот в минуту
; а это 150000/3,2 тиков таймера
; и делим на скорость
; 1 оборот в минуту 	46875 тиков
; 2 оборота в минуту	23437 тиков
; 50 оборотов в минуту	937 тиков
; 100 оборотов в минуту 468 тиков
; 600 оборотов в минуту 78 тиков
;		ldi r16,low(150000*10/32)
;		ldi r17,high(150000*10/32)

; 20 000 000/(200*2*2)=25 000 на один оборот в секунду
; режим полушага на каждый импульс два прерывания 200 импульсов на оборот
; получаем минимальные обороты в минуту 23
; при тиках 65217
; тогда разложим 65216=1019*64
; делить будем на скорость в rpm минимум на 23
; пронормируем 1019*64*23=большое число чем в два байта
; результат просто умнжим на 64
		ldi r16,low(23*1019);
		ldi r17,high(23*1019);

		rcall div16u ; делим на требуемые обороты

;*64
ldi r18,6
mul64:
		rol r16
		rol r17
	dec r18
	brne mul64

ldi r18,low(100)
ldi r19,high(100)
cp	r16,r18
cpc	r17,r19
brsh normFreq
	mov r16,r18
	mov r17,r19
normFreq:
		ldi r18, 0xFF
		ldi r19,0xFF
		sub r18,r16
		sbc r19,r17
		
	; запишем найденную уставку для таймера	
		sts ActTCNT2,r18
		sts ActTCNT2+1,r19

	pop r19
	pop r18
	pop r17
	pop r16
	out SREG,r16
	pop r16

	ret
;*******************************
;*******************************
