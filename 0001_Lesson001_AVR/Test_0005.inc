;**************************************
; ЗАДАЧА_0005
; Работа с линейкой светодиодов
; Реализация нескольких световых эффектов
; например
;C1	бегущая светик по кругу
;C2	бегущий светик из стороны в сторону
;C3	два последовательных светика
;C4	горит каждый второй
;**************************************
work_Color:
;-------------------------- Инициализация Порта ввода/вывода B

		ldi		r16, 0xFF	; Записываем число $FF в регистр r16
		out		DDRB, r16	; Записываем это число в DDRB
		ldi		r16, 0xF0	; Записываем число $F0 в регистр r16
		out		PORTB, r16	; Записываем то  же число в PORTB
; проинициализировали порт B на вывод 
; и погасили все светики с общим катодом(младшая тетрада)
; и с общим анодом (старшая тетрада)

;******************
work_C1_:
	ldi tmp1,0b00000001
	clr cnt1
work_C1:
;сбросим флаг переноса
	clc
;проверим надо ли при сдвиге внести значение переноса
	brtc PC+2	; переход если пользовательский бит сброшен
	sec	; установим флаг переноса
	clt	; сьросим пользовательский бит 
;проводим сдвиг влево через бит переноса
	rol tmp1
	brcc PC+2	; переход если бит переноса сброшен
;при необходимости запомним наличие переноса при последнем сдвиге
	set
; установим паузу для засвечивания светодиодов
	rcall Delay

;организуем паузу выполнения эффекта(проведем цикл 32 раза)
	inc cnt1
	cpi cnt1,32
	breq work_C2_

;учитывая что у нас есть светодиоды
; как с общим анодом так и с общим катодом преобразуем выходной байт
	mov tmp2,tmp1
	ldi tmp3,0x0F
	eor tmp2,tmp3	; применим операцию Исключающее ИЛИ к двум регистрам
	
	out PORTB,tmp2
	rjmp work_C1
;******************
;******************
work_C2_:
	ldi tmp1,0b00000001
	clr cnt1
work_C2:
; организуем проверку в какую сторону движемся
; для этого выставляем признак флаг Т
	cpi tmp1,0b10000000
	brne PC+2
	set
	cpi tmp1,0b00000001
	brne PC+2
	clt
	
;просмотрим в хранилище необходим ли нам бит переноса
	clc
	sbrc Flags,0
	sec

;организуем сдвиг
;смотрим флаг Т(направление)
	rol tmp1
	brtc PC+3
	ror tmp1
	ror tmp1
;запоминаем флаг переноса
	clr Flags
	brcc PC+2
	ldi Flags, 1	

	rcall Delay

	inc cnt1
	cpi cnt1,64
	breq work_C3_

	mov tmp2,tmp1
	ldi tmp3,0xF0
	eor tmp2,tmp3

	out PORTB,tmp2
	rjmp work_C2
;******************
;******************
work_C3_:
	ldi tmp1,0b00000011
	clr cnt1
work_C3:
;сбросим флаг переноса
	clc
;проверим надо ли при сдвиге внести значение переноса
	brtc PC+2
	sec
	clt
;проводим сдвиг
	rol tmp1
	brcc PC+2
;при необходимости запомним наличие переноса при последнем сдвиге
	set

	rcall Delay

;организуем паузу выполнения эффекта
	inc cnt1
	cpi cnt1,32
	breq work_C4_

;учитывая что у нас есть светодиоды
; как с общим анодом так и с общим катодом преобразуем выходной байт
	mov tmp2,tmp1
	ldi tmp3,0x0F
	eor tmp2,tmp3
	
	out PORTB,tmp2
	rjmp work_C3
;******************
;******************
work_C4_:
	ldi tmp1,0b01011010
	clr cnt1

	mov tmp2,tmp1
work_C4:
	
	rcall Delay

;организуем паузу выполнения эффекта
	inc cnt1
	cpi cnt1,32
	brne PC+2
	rjmp work_C1_

	ldi tmp3,0xFF
	eor tmp2,tmp3
	
	out PORTB,tmp2
	rjmp work_C4
;**************************************


