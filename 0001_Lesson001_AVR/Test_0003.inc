;**************************************
; ЗАДАЧА_0003
; Работа с семисегментным индикатором
; Поочередно выводим цифры с 0 по 99
; Для работы с индикатором используем таблицу соответствия цифр-коду
; Работа с двумя цифрами индикатора
;**************************************
; Реализация данной задачи аналогична ЗАДАЧЕ_0002
; только теперь надо подумать как выделить отдельно единицы и десятки
; из нашего числа и вывести соответственно на первую цифру индикатора десятки
; а на вторую цифру единицы нашего счетчика
;**************************************

.def tmp = r16	; временная переменная
.def cnt = r17	; счетчик от 0 до 99
.def tmpL = r18	; пара регистров для выделения единиц и десятков
.def tmpH = r19
.def tmpL2 = r20	; пара регистров для хранения вычитаемого
.def tmpH2 = r21

;**************************************
work_indicator2:
;-------------------------- Инициализация Порта ввода/вывода B

		ldi		tmp, 0xFF	; Записываем число $FF в регистр r16
		out		DDRB, tmp	; Записываем это число в DDRB
		ldi		tmp, 0x00	; Записываем число $00 в регистр r16
		out		PORTB, tmp	; Записываем то  же число в PORTB
; проинициализировали порт В на вывод и погасили все светики для индикатора с общим катодом

;-------------------------- Инициализация Порта ввода/вывода D

		ldi		tmp, 0xC0	; Записываем число $С0 или 0b11000000 в регистр r16
		out		DDRD, tmp	; Записываем это число в DDRD
		ldi		tmp, 0x00	; Записываем число $00 в регистр r16
		out		PORTD, tmp	; Записываем то  же число в PORTD
; проинициализировали порт D для контроля индикатор(когда гореть и какой цифре из двух)

	ldi cnt,-1
; теперь организуем бесконечный цикл для вывода всех цифр
work_ind2:
	inc cnt
	cpi cnt,100
	brne normal2
	clr cnt
normal2:
; запишем в tmpL tmpH копию числа на выделение единиц и десятков
; cnt не трогаем, оно не меняется а хранит числа от 0 до 99
; tmpL tmpH будут преобразованы - выделяются десятки и единицы
	mov tmpL,cnt	; скопировать значение регистра cnt в tmpL
	clr tmpH
	; проведем выбор кода для соответствующей цифры
	ldi tmpL2, low(10)	; загрузить младший байт константы 10
	ldi tmpH2, high(10)	; загрузить старший байт константы 10
	rcall digit	;вызов подпрограммы выделения десятков

; перед выводом новых данных, потушим цифры
	cbi PORTD, PD6
; организуем вывод десятков
	out PORTB, r0
; для того чтоб цифра отобразилась на индикаторе необходимо зажечь её
	sbi PORTD, PD7

; организуем паузу
	rcall DelayLong

	mov tmp, tmpL
	rcall number_init

; перед выводом новых данных, потушим цифры
	cbi PORTD, PD7
; организуем вывод единиц
	out PORTB, r0
; для того чтоб цифра отобразилась на индикаторе необходимо зажечь её
	sbi PORTD, PD6

; организуем паузу
	rcall DelayLong

	rjmp work_ind2
;**************************************

		;-------------------------- Подпрограммы

; пример подпрограммы подготовки данных на вывод
; будь то температура, напряжение, значение тока или другая цифровая информация(не буквенная)
; при необходимости отображать признак точки он должен быть добавлен к извлеченной константе

NumberTC:
; подпрограмма определения цифр для отображения
; рабочий байт передаеться из 
;	tmpL2 это младший байт
; 	tmpH2 это старший байт
		
		ldi tmpL2, low(100)
		ldi tmpH2, high(100)
		rcall digit
		sts TT2, r0

		ldi tmpL2, low(10)
		ldi tmpH2, high(10)
		rcall digit
		sts TT1, r0
		
		mov tmp, tmpL
		rcall number_init
		sts TT0, r0
		
		ret

;**************************************
; подпрограмма разложения числа на разряды
; суть проста - вычитаем то что хотим выделить
; надо помнить что подсчитаем все кол-во раз вхождения вычитаемого
; при исходном 123 и вычитании десятков получим 12 !!!
digit:	ldi tmp, -1	; сразу инициализируем -1
digit_1:inc tmp		; инкрементируем, т.е. впервый раз начинаем с нуля!!!
		sub tmpL, tmpL2	; вычитание младшего байта
		sbc tmpH, tmpH2	; вычитание с переносом старшего байта
		brsh digit_1	; в случае коль не отрицательное повторить
		add tmpL, tmpL2	; иначе восстанавливаем последнее значение
		adc tmpH, tmpH2	; в итоге остается все что меньше вычитаемого
						; т.е. вычитая 10 остаток единицы!!!
;		ret

; подпрограмма извлечения константы для индикатора из таблицы
number_init:
		ldi zh, high(TableIndicator*2)
		ldi zl, low(TableIndicator*2)
		add zl, tmp
		clr tmp
		adc zh, tmp
		lpm	; результат в R0
		ret

;**************************************


